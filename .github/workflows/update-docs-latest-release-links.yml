name: Update Latest Release Components

on:
  push:
    tags:
      - "v*" # Trigger on tag pushes, e.g., v1.0.2

jobs:
  update_release_components:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest release assets
        id: get_latest_release_assets
        run: |
          assets=$(gh release list --limit 1 --json assets | jq -r '.[0].assets[].name')
          echo "Latest release assets: $assets"
          echo "::set-output name=assets::$assets"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Generate Latest Release Components
        run: |
          release_assets="${{ steps.get_latest_release_assets.outputs.assets }}"
          for asset in $release_assets; do
            asset_name="${asset%%-v*}"  # Remove version number
            component_file="apps/docs/packages/wordpress/${asset_name}/latest-release.tsx"
            echo "export function LatestRelease() {" > "$component_file"
            echo "  return (" >> "$component_file"
            echo "    <a href=\"https://github.com/CalebBarnes/nextwp/releases/latest/download/${asset}\">" >> "$component_file"
            echo "      Download Latest Release (${asset_name})" >> "$component_file"
            echo "    </a>" >> "$component_file"
            echo "  )" >> "$component_file"
            echo "}" >> "$component_file"
            echo "Generated $component_file for $asset_name"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action Bot'
          git config --global user.email 'action@github.com'
          git add apps/docs/packages/wordpress/*/*.tsx
          git commit -m "Update Latest Release Components"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
